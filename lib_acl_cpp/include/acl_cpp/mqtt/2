#pragma once

namespace acl {

typedef enum {
	MQTT_RESERVED_MIN,
	MQTT_CONNECT,
	MQTT_CONNACK,
	MQTT_PUBLISH,
	MQTT_PUBACK,
	MQTT_PUBREC,
	MQTT_PUBREL,
	MQTT_PUBCOMP,
	MQTT_SUBSCRIBE,
	MQTT_SUBACK,
	MQTT_UNSUBSCRIBE,
	MQTT_UNSUBACK,
	MQTT_PINGREQ,
	MQTT_PINGRESP,
	MQTT_DISCONNECT,
	MQTT_RESERVED_MAX,
} mqtt_type_t;

typedef enum {
	MQTT_NONE,
	MQTT_NEED,
	MQTT_MAYBE,
} mqtt_option_t;

struct mqtt_constrain {
	mqtt_type_t type;
	unsigned char flags:4;
	mqtt_option_t id;
	mqtt_option_t payload;
};

struct mqtt_header {
	mqtt_type_t type;
	unsigned char flags:4;
	unsigned int length;
};

class mqtt_builder {
	mqtt_builder(mqtt_type_t type);
	~mqtt_builder(void);

	mqtt_builder& set_payload_length(unsigned int len);

	bool build(void);

private:
	mqtt_type_t type_;
	unsigned length_;
};

} // namespace acl
